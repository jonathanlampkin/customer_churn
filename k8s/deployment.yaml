apiVersion: apps/v1
kind: Deployment
metadata:
  name: churn-prediction-api
  labels:
    app: churn-prediction
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: churn-prediction
      component: api
  template:
    metadata:
      labels:
        app: churn-prediction
        component: api
    spec:
      containers:
      - name: api
        image: churn-prediction:latest
        imagePullPolicy: IfNotPresent
        command: ["uvicorn", "src.api.advanced_app:app", "--host", "0.0.0.0", "--port", "8000"]
        ports:
        - containerPort: 8000
        resources:
          requests:
            memory: "512Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        env:
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: churn-api-secrets
              key: api-key
        volumeMounts:
        - name: models-volume
          mountPath: /app/models
        - name: config-volume
          mountPath: /app/configs
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 15
      volumes:
      - name: models-volume
        persistentVolumeClaim:
          claimName: models-pvc
      - name: config-volume
        configMap:
          name: churn-config
---
apiVersion: v1
kind: Service
metadata:
  name: churn-prediction-api-service
  labels:
    app: churn-prediction
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: churn-prediction
    component: api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: churn-prediction-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
spec:
  rules:
  - host: churn-api.example.com
    http:
      paths:
      - path: /api(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: churn-prediction-api-service
            port:
              number: 80 